package workshop_2;

import java.io.FileNotFoundException;
import java.util.Scanner;

public class Controller {
	static Scanner scanner = new Scanner(System.in);
	static Authentication authenticate = new Authentication();
	static Registry registry = new Registry();
	static View view = new View();
	static Member member;
	static int id = 0;

	public static void main(String[] args) throws FileNotFoundException {

		view.welcomeMessage();
		Boolean start = view.validate();
		Boolean start = true;
		registry = new Registry();
		view.menu();
		while(start){
			
			switch (view.switchState()) {
			case 1:  
				if(member.getNumberOfBoats() < 5){
					String[] boatInformation = view.ViewCreateBoat();
					member.writeBoatToFile(boatInformation[0], boatInformation[1]); //TODO new name
				}
				else{
					view.boatLimitError();
				}
				break;

			case 2:  
				int boatNumber = view.whichBoatNumber();

				if(member.getBoat(boatNumber) != null){				
					int boatChange = view.switchStateChangeBoat();

					switch (boatChange) {
					case 1:  
						String boatType = view.changeBoatType();
						member.manageBoat(boatNumber, boatType, member.listOfBoats[boatNumber-1].getLength());//TODO listofboats
						break;
					case 2:  
						String boatLength = view.changeBoatLength();
						member.manageBoat(boatNumber, member.listOfBoats[boatNumber-1].getType(),boatLength );
						break;
					case 3:  
						String[] boatInformation= view.changeBoat();
						member.manageBoat(boatNumber, boatInformation[0], boatInformation[1]);
						break;
					}
				}
				else{
					view.boatExistError();
				}
				break;

			case 3:  
				boatNumber = view.whichBoatNumber();
				if(member.getBoat(boatNumber) != null){
					member.deleteBoat(boatNumber);
				}
				else{
					view.boatExistError();
				}
				break;

			case 4:  
				System.out.println("\t1. Change name");
				System.out.println("\t2. Chnage security number");
				System.out.println("\t3. Change both");
				System.out.print("	Enter what you want change: ");
				int memberChange = scanner.nextInt();

				switch (memberChange) {
				case 1:  
					System.out.print("\nYour first name: ");
					String changeName = scanner.next(); 

					System.out.print("\nYour last name: ");
					changeName += " "+scanner.next();
					member.setName(changeName);
					System.out.println("Your name is now changed!");
					break;

				case 2:  
					System.out.print("\nSecurity number: ");
					String changeSecurityNumber = scanner.next(); 
					member.setSecurityNumber(changeSecurityNumber);
					System.out.println("Your Security number is now changed!");
					break;
				case 3:  
					System.out.print("\nYour first name: ");
					changeName = scanner.next(); 
					System.out.print("\nYour last name: ");
					changeName += " "+scanner.next();
					System.out.print("\nSecurity number: ");
					changeSecurityNumber = scanner.next(); 
					member.manageMember(changeName, changeSecurityNumber);
					System.out.println("Your member infromation is now changed!");
					break;
				}		
				break;

			case 5: 
				member.deleteMember();
				start = view.deleteMember();
				break;
				
			case 6: 
				String[][] compactList = registry.getCompactList();
				for(int i = 0; i <compactList.length; i++){
					System.out.println("\nMember "+(i+1)+":");
					for(int k = 0; k <3; k++){

						if(k == 0)	System.out.println("\tId: "+compactList[i][k]);
						else if(k == 1)	System.out.println("\tName: "+compactList[i][k]);
						else if(k == 2)	System.out.println("\tNumber of boats: "+compactList[i][k]);
					}
				}
				break;

			case 7: 
				String[][] verboseList = registry.getVerboseList();
				System.out.println("\nVerbose list:");
				view.printArray(verboseList);
				break;

			case 8:
				System.out.println("Your information:\n");
				System.out.println("\tId: "+member.getID());
				System.out.println("\tName: "+member.getName());
				System.out.println("\tSecurity Number: "+member.getSecurityNumber()+"\n");

				Boat[] boats = member.getAllBoats();
				int counter = 1;
				for(int j = 0; j < boats.length; j++){
					if(boats[j] != null){
						System.out.println("\tBoat: "+counter);
						System.out.println("\t\tBoat type: "+boats[j].getType());
						System.out.println("\t\tLength: "+boats[j].getLength()+" m");
						counter++;
					}
				}
				break;

			case 9:  
				System.out.println("\t1. Search name");
				System.out.println("\t2. Search securitynumber");
				System.out.println("\t3. Search boat type");
				System.out.print("\tEnter what you want search for: ");
				int search = scanner.nextInt();

				switch (search) {
				case 1:  
					System.out.print("Name: ");
					String searchName = scanner.next(); 
					String[][] searchArr = registry.containsName(searchName);
					view.printArray(searchArr);
					break;

				case 2:  
					System.out.print("Security number: ");
					String searchSecurityNr= scanner.next(); 
					searchArr = registry.containsSecurityNumber(searchSecurityNr);
					view.printArray(searchArr);
					break;
				case 3:  
					System.out.print("Boat type: ");
					String searchBoatType = scanner.next(); 
					searchArr = registry.containsTypeOfBoat(searchBoatType);
					view.printArray(searchArr);
					break;
				}		
				break;
			case 10:  
				view.menu();
				break;

			case 11: 
				main(args);
				break;

			case 12: 
				System.exit(1);
				break;

			default: 
				view.defaultError();
				break;
			}
			registry = new Registry();
		}
		System.out.println("Good bye");
	}




}
